version: '3'

services:

  # proxy:
  #   container_name: reverse_proxy
  #   image: nginx:latest
  #   restart: always
  #   ports:
  #     - 80:80
  #     # - 443:443
  #   volumes:
  #     # - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      
  #     #- ./nginx/conf.d/default-ssl.conf.template:/etc/nginx/conf.d/default.conf.template
  #     # - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     # - ./certbot/www:/var/www/certbot/:ro
  #     # - ./certbot/conf/:/etc/nginx/ssl/:ro
  #   # environment:
  #     # - SERVER_NAME=${SERVER_NAME}
  #   # command: /bin/bash -c "sed 's/{{SERVER_NAME}}/${SERVER_NAME}/g' /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  javascript:
    container_name: js_app
    image: js_app:latest
    build:
      context: ./javascript
      dockerfile: Dockerfile
    expose:
      - 8080
    volumes:
        - ./javascript/app:/var/www/html
    network_mode: host

  java:
    container_name: java_app # overwriten by replica mode
    image: java_app:latest
    build:
      context: ./java
      dockerfile: Dockerfile
    volumes:
        - ./java/app:/java-app/

  python:
    container_name: python_app # overwriten by replica mode
    image: python_app:latest
    build:
      context: ./python
      dockerfile: Dockerfile
    volumes:
        - ./python/app:/python_app/

  mysql:
    container_name: db
    image: mysql:5.6.51
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_PASSWORD=root
      - MYSQL_DATABASE=mydatabase
    expose:
      - 3306
    volumes:
      - mydatabase:/var/lib/mysql
      - ./mysql/schema.sql:/docker-entrypoint-initdb.d/1.sql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/2.sql
    network_mode: host

volumes:
  mydatabase:
    driver: local
